language: generic
dist: trusty
sudo: required
# cache:
#   directories:
#   - $HOME/.cache/pip

matrix:
  include:  
    # NO C++ test
    # CALLS python tests by hand 
    # (make python test does not work yet)
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake
            - g++-6
      env:
        - USE_CONDA=true
        - CONDA_PYTHON_VERSION=3.6
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"


before_install:
  - eval "${MATRIX_EVAL}"

install:
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH";
  - hash -r;
  - conda config --set always_yes yes --set changeps1 no;
  - conda update -q conda;
  - conda info -a;
  #
  - conda create -q -n dev python=$CONDA_PYTHON_VERSION numpy nose boost hdf5 scikit-image
  - source activate dev
  - conda install -c anaconda cmake=3.2
  - conda install -c conda-forge glpk

before_script:
  - eval "${MATRIX_EVAL}"

script:

  ###############################################
  # shortcuts
  ###############################################
  - export PATH="$HOME/miniconda/bin:$PATH"
  - source activate dev
  - export ENV_ROOT="$HOME/miniconda/envs/dev"
  - export ENV_INCLUDE="$ENV_ROOT/include"
  - export ENV_BIN=$ENV_ROOT/bin
  - export ROOT_BIN="$HOME/miniconda/bin"
  
  
  #-DCMAKE_C_COMPILER=$C_COMPILER_PATH
  #-DCMAKE_CXX_COMPILER=$COMPILER_PATH
  ###############################################
  # configure cmake
  ###############################################
  - $ENV_BIN/cmake 
          -DWITHIN_TRAVIS=ON 
          -DWITH_QPBO=ON
          -DWITH_HDF5=OFF
          -DWITH_QPBO=ON
          -DWITH_GLPK=OFF 
          -DWITH_CPLEX=OFF 
          -DWITH_GUROBI=OFF
          -DBUILD_CPP_TEST=OFF
          -DBUILD_PYTHON_TEST=ON 
          -DBUILD_NIFTY_PYTHON=ON 
          -DNOSETESTS_PATH=$ENV_BIN 
          -DHDF5_INCLUDE_DIR=$ENV_INCLUDE 
          -DGLPK_INCLUDE_DIR=$ENV_INCLUDE 
          -DBoost_INCLUDE_DIR=$ENV_INCLUDE  
          -DPYTHON_EXECUTABLE=$ENV_BIN/python$CONDA_PYTHON_VERSION
          -DPYTHON_NUMPY_INCLUDE_DIR=/home/travis/miniconda/envs/dev/lib/python$CONDA_PYTHON_VERSION/site-packages/numpy/core/include
          -DPYTHON_MODULE_INSTALL_DIR=/home/travis/miniconda/envs/dev/lib/python$CONDA_PYTHON_VERSION/site-packages/
          -DCMAKE_INSTALL_PREFIX=/home/travis/miniconda/envs/dev/
         
  ###############################################
  # the actual build
  ###############################################
  - make -j 2
  ###############################################
  # cpp tests
  ###############################################
  - make test
  - CTEST_OUTPUT_ON_FAILURE=TRUE make test
  ###############################################
  # install and test the project
  ###############################################
  
  - sudo make install
  - cd src/python/test
  # this is a fucked up way of running python test
  # pls, if someone could fix this =)
  - nosetests  cgp/*.py
  - nosetests  graph/lifted_multicut/*.py
  - nosetests  graph/multicut/*.py
  - nosetests  graph/mincut/*.py
  - nosetests  graph/agglo/*.py
  - nosetests  hdf5/*.py
  - nosetests  tools/*.py

  # back to the root
  - cd ../../..
  
  # run the python examples with nose?
  - $ENV_BIN/python src/python/examples/nifty_configuration.py
  # this example uses plotting...
  #- python src/python/examples/graph/plot_edge_contraction_graph.py

